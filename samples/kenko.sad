// ----------------------------------------------------------------
//  セキュリティ分析図：スマホ対応金庫「賢庫」
//  ※ 脆弱性が見つかった状態の分析図
// ----------------------------------------------------------------

[1] 第三者はスマホ対応金庫システムを解錠できない
    expr  not(5)
    考察  いきなり「第三者が金庫を解錠できない」ことを説明するのは難しいので、まずは攻撃者視点に切り替えてみる。
    方針  攻撃者視点に切り替える。

  [5] 第三者はスマホ対応金庫システムを解錠できる
      expr  or(6, 7)
      考察  ユーザーだけが利用を許可されている「金庫を解錠する」という「機能」がある。
      方針  攻撃者が「機能」を利用する手段は「IFを操作する方法」と「構成要素を操作する方法」の2つの手段がある。

    [6] 第三者はスマホ対応金庫システムを解錠できる／IFを操作して
        expr  or(8, 9)
        方針  複数の手段がある場合は、個々の手段に分解する。
        考察  この金庫には「解錠する」IFとして「物理鍵で解錠する」方法と「スマホで解錠する」方法の2つが用意されている。

      [8] 第三者はスマホ対応金庫システムを解錠できる／IFを操作して／物理鍵で
          expr  and(10, 11)
          考察  物理鍵で金庫を開けるために必要になることは、物理鍵が手に入ること、金庫のそばに行くことができることの2つ。
          方針  攻撃成立する条件でAND分解する。

        [10] 第三者は物理鍵を入手できる
            expr  or(12, 13, 14, 15)
            考察  もし物理鍵が同じ機種で共通の鍵であった場合、第三者が同機種の金庫を購入してしまえば、ユーザーの金庫を物理鍵で開けてしまうことができる。
            確認  物理鍵は金庫1台ごとに異なる固有の鍵なのか？それとも同じ機種の金庫はまったく同じ物理鍵なのか？
            回答  物理鍵は金庫1台ごとに異なる固有の鍵である。
            考察  それでは、物理鍵のライフサイクルを追いかけて、第三者がユーザーの金庫の物理鍵を入手できる隙がないかを確認する。
            考察  物理鍵は工場で金庫と一緒に梱包され、ユーザー宅で開梱されるまで物理鍵は安全にユーザーまで届けられる
            方針  物理鍵の存在する場所ごとにノード分解する
            項目  工場、配送、店舗、ユーザー宅

          [12] 第三者は物理鍵を入手できる／工場で
              expr  false
              根拠  工場は金庫メーカーの自社工場であり、第三者は立ち入りできないように建物の入退室管理が実施されている。

          [13] 第三者は物理鍵を入手できる／配送中に
              expr  false
              根拠  工場から店舗までの配送は金庫メーカーの自社トラックにより、第三者が配送中の金庫に手を触れることがないように注意して配送されている。

          [14] 第三者は物理鍵を入手できる／店舗で
              expr  false
              根拠  もし店舗で第三者が物理鍵を手に入れようとすると梱包を開けなければならず、梱包に開けた痕跡が残ってしまうので、その金庫は実際に販売されることはない。

          [15] 第三者は物理鍵を入手できる／ユーザー宅で
              expr  false
              根拠  ユーザーは物理鍵を他人に盗まれることがないように安全に管理することが前提。


      [9] 第三者はスマホ対応金庫システムを解錠できる／IFを操作して／スマホで
          expr  and(16, 11)
          考察  スマホで金庫を開けるために必要になることは、スマホアプリが手に入ること、金庫のそばに行くことができることの2つ。
          方針  攻撃成立する条件でAND分解する。
          脆弱性  スマホアプリの認証がないのが問題。

        [16] 第三者はスマホアプリを入手できる
            expr  true
            根拠  スマホアプリはGoogle Playで配布されているので、誰でもアプリを入手することができる

    [7] 第三者はスマホ対応金庫システムを解錠できる／構成要素を操作して
        expr or(17, 18)
        考察  解錠メカニズムは物理鍵で解錠する仕組みとスマホで解錠する仕組みの2つがある。
        方針  複数の手段がある場合は、個々の手段に分解する。
        項目  物理鍵の解錠メカニズム、スマホの解錠メカニズム

      [17] 第三者はスマホ対応金庫システムを解錠できる／構成要素を操作して／物理鍵の解錠メカニズム
          expr  false
          根拠  物理鍵の解錠メカニズムは物理鍵がなければ解錠できないように作られていて、この仕組みの安全性は信頼し得る十分な実績がある。

      [18] 第三者はスマホ対応金庫システムを解錠できる／構成要素を操作して／スマホの解錠メカニズム
          expr  or(19, 20, 21, 22)
          考察  スマホ連携機能の構成図を作成して、各要素をどのように悪用すれば金庫を解錠できるか考える。

        [19] 第三者は解錠メカの【電動解錠】機能を実行できる
            expr  false
            考察  電動解錠機能を直接実行させることができれば、金庫を解錠できる。
            根拠  電動解錠機能を直接実行するには、電力線に電力を供給する必要があるが、第三者が物理的に金庫内部の電力線を触ることはできない。

        [20] 第三者はマイコンから解錠メカを制御できる
            expr  or(23, 24, 25)
            考察  マイコンから何らかの方法で電力線へ電力を供給できれば、解錠メカが動作して金庫を解錠できる。
            方針  マイコン攻撃の分解パターン
            項目  要求処理API、JTAGデバッグ、ファーム書換

          [23] 第三者がマイコンの要求処理APIを利用して、電力線へ電力供給できる
              expr  or(26, 27, 28)
              方針  API攻撃の分解パターン
              項目  APIの悪用、APIのコード脆弱性、OS/BSWのコード脆弱性

            [26] 第三者がAPIを使って、電力線へ電力供給できる
                expr  =(21)
                考察  APIの「解錠要求」で電力線へ電力供給でき、金庫を解錠できる。
                考察  APIの「解錠要求」を呼び出すには、【解錠要求】パケットをBLEで送信できればよい。

            [27] 第三者がAPIのコード脆弱性を使って、電力線へ電力供給できる
                expr  not(29)
                考察  マイコンのAPIのプログラムに任意コード実行などのコード脆弱性があると、第三者が電力線へ電力供給できる。

            [28] 第三者がOS/BSWのコード脆弱性を使って、電力線へ電力供給できる
                expr  not(30)
                考察  マイコンのOS/BSWのプログラムに任意コード実行などのコード脆弱性があると、第三者が電力線へ電力供給できる。



          [24] 第三者がマイコンのJTAGデバッグ機能を利用して、電力線へ電力供給できる
              expr  false
              根拠  JTAGピンはマイコンに存在するが、第三者は金庫内部にアクセスできないため、マイコンのJTAGピンにアクセスすることもできない。

          [25] 第三者がマイコンのファーム書換機能を利用して、電力線へ電力供給できる
              expr  true
              考察  マイコンはArduinoでありUSBケーブル経由でファーム書き換えが可能である。第三者がUSBケーブルにアクセスできるのであれば、第三者はマイコンのファームを書き換えて、電力線へ電力供給するプログラムを書き込むことが可能である。
              確認  金庫はUSBケーブルで電源供給されているが、このUSBケーブルからファーム書き換えができないような細工はされているか？
              回答  単に普通のマイクロUSBケーブルがArduinoのUSBポートに接続されているだけ。
              脆弱性  USB電源ケーブルからマイコンのファーム書換をされてしまう。
              根拠  第三者がUSB電源ケーブルからマイコンのファーム書換できるため

        [21] 第三者は【解錠要求】パケットを送信できる
            expr  true
            考察  正常な【解錠要求】パケット、つまりマイコン側で受理される【解錠要求】パケットを第三者が作成し送信できるかという問題。
            考察  Ver.20160615の設計によれば、解錠要求＝シリアル番号(2bytes)＋02H(1byte)という構成である。
            根拠  たとえマイコンのBLE受信処理において正しいシリアル番号でなければ受理しないような実装がなされていたとしても、シリアル番号は16ビット空間しかないので容易に全空間を試せてしまう。
            根拠  解錠要求にはMACのような送信側を信頼できる仕組みがないので、容易に第三者が正常な【解錠要求】パケットを生成できてしまう。
            脆弱性  【解錠要求】パケットにMACがなく、第三者が【解錠要求】パケットを容易に生成できてしまう。

        [22] 第三者は専用アプリの【遠隔解錠】機能を実行できる
            expr  false
            根拠  専用アプリの【遠隔解錠】機能はアプリのUIから起動されるものであって、直接この機能を第三者が実行することはできない。
            根拠  本当は・・・スマホアプリの脆弱性があればアプリ間連携で遠隔解錠機能をマルウェアに悪用される可能性もあるし・・・スマホ本体の遠隔支援機能(リモートアシスタンス的な)があればそれが悪用されて・・・などあるが、今回の例はスマホアプリ側の脅威分析は割愛。

[2] スマホ対応金庫システムが解錠状態であるとき、ユーザーがそれを認識できる
[3] 第三者はスマホ対応金庫システムを施錠確認できない
[4] 第三者がスマホ対応金庫システムの施錠を妨害できない

// ----------------------------------------------------------------
//  ポリシー
// ----------------------------------------------------------------

[11] 第三者は金庫のそばに行くことができる
    expr  true
    根拠  そもそも金庫というものは、物理的に触れることができる攻撃者から内容物を守るためのものであるので、第三者が金庫に触れることができることは前提である。

// ----------------------------------------------------------------
//  共通
// ----------------------------------------------------------------

[29] マイコンのAPIプログラムにコード脆弱性はない
    expr  and(31, 32, 33, 34)
    方針  コード脆弱性がないことの確認の分解パターン
    項目  目視によるソースコードレビュー／ソースコード静的解析ツール／Fuzzingテストまたはランダム入力テスト／人手による疑似攻撃検査
  [31] マイコンのAPIプログラムは脆弱性は見つかっていない／目視によるソースコードレビューにより
      expr  true
      根拠  2016/9/1 片岡、松並の2名によりAPIパース処理部分の目視によるコードレビューを実施。全パラメタは値域チェックが成されており、またパラメタ使用部分についても問題を生じないことを確認済み。

  [32] マイコンのAPIプログラムは脆弱性は見つかっていない／ソースコード静的解析ツールにより
      expr  true
      根拠  2016/8/22 コード解析ツールによる警告は0件であることを確認済み。

  [33] マイコンのAPIプログラムは脆弱性は見つかっていない／Fuzzingテストまたはランダム入力テストにより
      expr  true
      根拠  2016/8/23 APIに対するFuzzingテストを実施。クラッシュや応答しなくなるような不具合は見つからなかった。

  [34] マイコンのAPIプログラムは脆弱性は見つかっていない／人手による疑似攻撃検査により
      expr  true
      根拠  2016/9/2 セキュリティ専門ベンダーによるAPI攻撃検査を実施。問題は一つも見つからなかった。

[30] マイコンのOS/BSWにコード脆弱性はない
    expr  =(35)
    方針  コード脆弱性がないことを確認するアクティビティを実施し、その結果を根拠とする。

  [35] マイコンのOS/BSWは脆弱性の見つかっていないバージョンのものを使用している
      expr  true
      根拠  2016/6時点で既知脆弱性のないOSを使用していることを確認済み。
